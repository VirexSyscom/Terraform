trigger:
- main

pool:
  name: 'LinuxAgents'

steps:


#- task: TerraformCLI@2
#  inputs:
#    command: 'init'
#    workingDirectory: 'tffile'
#    backendType: 'azurerm'
#    ensureBackend: true
#    backendServiceArm: 'terraform_test'
#    allowTelemetryCollection: true

- task: TerraformCLI@2
  inputs:
    command: 'init'
    workingDirectory: 'tffile'
    backendType: 'azurerm'
    backendServiceArm: 'terraform_test'
    backendAzureRmTenantId: $(TID)
    backendAzureRmSubscriptionId: $(SUBID)
    ensureBackend: true
    backendAzureRmResourceGroupName: $(SARG)
    backendAzureRmResourceGroupLocation: $(SALocation)
    backendAzureRmStorageAccountName: $(SAName)
    backendAzureRmContainerName: $(CName)
    allowTelemetryCollection: true

#- task: TerraformCLI@2
#  displayName: terraform init
#  inputs:
#    command: 'init'
#    allowTelemetryCollection: true


- task: TerraformCLI@2
  displayName: terraform plan
  inputs:
    command: 'plan'
    workingDirectory: 'tffile'
    environmentServiceName: 'terraform_test'
#    providerAzureRmSubscriptionId: $(SUBID)
    allowTelemetryCollection: true
    publishPlanResults: 'Main.tfplan'

- task: TerraformCLI@2
  displayName: terraform apply
  inputs:
    command: 'apply'
    workingDirectory: 'tffile'
    environmentServiceName: 'terraform_test'
#    providerAzureRmSubscriptionId: $(SUBID)
    allowTelemetryCollection: true