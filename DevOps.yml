trigger:
- main

pool:
  name: 'LinuxAgents'

variables:
- group: Secert
- name: DevOpsServiceAccount
  value: 'DEVSECRET'

steps:



#- task: TerraformCLI@2
#  inputs:
#    command: 'init'
#    workingDirectory: 'tffile'
#    backendType: 'azurerm'
#    ensureBackend: true
#    backendServiceArm: 'terraform_test'
#    allowTelemetryCollection: true

- task: Bash@3
  displayName: TEST1
  inputs:
    targetType: 'inline'
    script: 'echo "##vso[task.setvariable variable=DEVSECRET;issecret=true]secretvalue"'


- task: Bash@3
  displayName: TEST2
  inputs:
    targetType: 'inline'
    script: 'echo $(DEVSECRET)'


- task: TerraformCLI@2
  inputs:
    command: 'init'
    workingDirectory: 'tffile'
    backendType: 'azurerm'
    backendServiceArm: 'terraform_test'
    backendAzureRmTenantId: $(TID)
    backendAzureRmSubscriptionId: $(SUBID)
    #ensureBackend: true
    backendAzureRmResourceGroupName: $(SARG)
    backendAzureRmResourceGroupLocation: $(SALocation)
    backendAzureRmStorageAccountName: $(SAName)
    backendAzureRmContainerName: $(CName)
    backendAzureRmKey: $(DEVSECRET)
    allowTelemetryCollection: true
    commandOptions: '-var secret=$(DEVSECRET)'

#- task: TerraformCLI@2
#  displayName: terraform init
#  inputs:
#    command: 'init'
#    allowTelemetryCollection: true


- task: TerraformCLI@2
  displayName: terraform plan
  inputs:
    command: 'plan'
    workingDirectory: 'tffile'
    environmentServiceName: 'terraform_test'
#    providerAzureRmSubscriptionId: $(SUBID)
    allowTelemetryCollection: true
    publishPlanResults: 'Main.tfplan'

- task: TerraformCLI@2
  displayName: terraform apply
  inputs:
    command: 'apply'
    workingDirectory: 'tffile'
    environmentServiceName: 'terraform_test'
#    providerAzureRmSubscriptionId: $(SUBID)
    allowTelemetryCollection: true