# Azure Pipeline that run basic continuous integration on a Terraform project

# This makes sure the pipeline is triggered every time code is pushed in the validation-testing example source, on all branches.
trigger:
- main

pool:
  name: 'LinuxAgents'

steps:
#- task: Bash@3
#  displayName: 'terraform'
#  inputs:
#    filePath: './test.sh'
#
#- task: Bash@3
#  displayName: 'Set ENV #1'
#  inputs:
#    targetType: 'inline'
#    script: "export ARM_SUBSCRIPTION_ID='$(SUB_ID)'"
#
#- task: Bash@3
#  displayName: 'Set ENV #2'
#  inputs:
#    targetType: 'inline'
#    script: "export ARM_TENANT_ID='$(TENANT_ID)'"
#
#
#- task: Bash@3
#  displayName: 'Set ENV #3'
#  inputs:
#    targetType: 'inline'
#    script: "export ARM_CLIENT_ID='$(ARM_CLIENT_ID)'"
#
#- task: Bash@3
#  displayName: 'Set ENV #4'
#  inputs:
#    targetType: 'inline'
#    script: "export ARM_CLIENT_SECRET='$(ARM_CLIENT_SECRET_ID)'"
#
#
- task: Bash@3
  displayName: 'Check Terraform Provider'
  inputs:
    targetType: 'inline'
    script: 'terraform init -upgrade'

- task: Bash@3
  displayName: 'Make Terraform Plan'
  inputs:
    targetType: 'inline'
    script: 'terraform plan -out main.tfplan'

- task: Bash@3
  displayName: 'Set ENV #1'
  inputs:
    targetType: 'inline'
    overrideParameters: '-SID $(SUB_ID)'
    script: 'export ARM_SUBSCRIPTION_ID="$(SID)"'

- task: Bash@3
  displayName: 'Set ENV #2'
  inputs:
    targetType: 'inline'
    overrideParameters: 'ATID $(TENANT_ID)'
    script: 'export ARM_TENANT_ID="$(ATID)"'

- task: Bash@3
  displayName: 'Set ENV #3'
  inputs:
    targetType: 'inline'
    overrideParameters: '-ARMCID $(ARM_CLIENT_ID)'
    script: 'export ARM_CLIENT_ID="$(ARMCID)"'

- task: Bash@3
  displayName: 'Set ENV #4'
  inputs:
    targetType: 'inline'
    overrideParameters: '-ARMCSID $(ARM_CLIENT_SECRET_ID)'
    script: 'export ARM_CLIENT_SECRET="$(ARMCSID)"'


- task: Bash@3
  displayName: 'Deploy from Terraform Plan'
  inputs:
    targetType: 'inline'
    script: 'terraform apply main.tfplan'